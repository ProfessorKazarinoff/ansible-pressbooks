# ansible role that installs MySQL server
---
# Print out a message to the user about the playbook that's running
- name: Print message
  ansible.builtin.debug:
    msg: Running mysql role main.yml playbook
# Install apt
- name: Install aptitude
  apt:
    name: aptitude
    state: latest
    update_cache: true
# Run apt update && apt upgrade
- name: sudo apt update && sudo apt upgrade 
  apt:
    upgrade: yes
    update_cache: yes
    cache_valid_time: 86400 #one day
# Install mysql-server and mysql-client with apt  
- name: Install mariadb-server with apt
  apt:
    pkg:
      - mariadb-server
      - mariadb-client
    state: latest
    update_cache: true
# - name: Start mysql service
#   service:
#     name: mysql.service
#     state: started
# - name: add line to mysql config file
#   lineinfile:
#     dest: /etc/mysql/mysql.conf.d/mysqld.cnf
#     insertafter: '[mysqld]'
#     line: "default_authentication_plugin=caching_sha2_password"
- name: secure mysql with mysql_secure_installation script
  become: yes
  expect:
    command: mysql_secure_installation
    responses:
      'Press y|Y for Yes, any other key for No:': 'y'
      'Please enter 0 = LOW, 1 = MEDIUM and 2 = STRONG:': '1'
      'Remove anonymous users? (Press y|Y for Yes, any other key for No) :': 'y'
      'Disallow root login remotely? (Press y|Y for Yes, any other key for No) :': 'y'
      'Remove test database and access to it? (Press y|Y for Yes, any other key for No) :': 'y'
      'Reload privilege tables now? (Press y|Y for Yes, any other key for No) :': 'y'
    timeout: 1
  register: secure_mysql
  failed_when: "'... Failed!' in secure_mysql.stdout_lines"
- name: restart mysql service
  service:
    name: mysql.service
    state: restarted
- name: Install PyMySQL
  apt:
    name: python3-pymysql
    state: present
- name: Removes anonymous user account for localhost
  community.mysql.mysql_user:
    name: ''
    host: localhost
    state: absent
    login_unix_socket: /run/mysqld/mysqld.sock
- name: Create a new database with name 'wpdb'
  community.mysql.mysql_db:
    name: "{{ mysql_database_name }}"
    state: present
    login_unix_socket: /run/mysqld/mysqld.sock
- name: Create database user with name 'mysql_user' and password 'mysql_password' from vars/default.yml with all database privileges
  community.mysql.mysql_user:
    name: "{{ mysql_user }}"
    password: "{{ mysql_password }}"
    priv: '*.*:ALL'
    state: present
    login_unix_socket: /run/mysqld/mysqld.sock

# Print out a message to the user that the playbook is complete
- name: Playbook Complete
  ansible.builtin.debug:
    msg: MySQL setup complete!
